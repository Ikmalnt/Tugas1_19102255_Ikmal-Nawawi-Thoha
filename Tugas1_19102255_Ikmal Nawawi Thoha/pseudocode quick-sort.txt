Prosedure QuickSort (make([]int, size, size);
Menghasilkan sepotong ukuran, ukuran diisi dengan angka acak
func generateSlice(size int) []int {

START
	slice := make([]int, size, size)
	rand.Seed(time.Now().UnixNano())
	for i := 0; i < size; i++ {
		slice[i] = rand.Intn(999) - rand.Intn(999)
	}
	return slice
}
 
func quicksort(a []int) []int {
    if len(a) < 2 {
        return a
    }
END

Prosedure QuickSort (make([]int, size, size);
Menghasilkan sepotong ukuran, ukuran diisi dengan angka acak
func generateSlice(size int) []int {

STAR  
    left, right := 0, len(a)-1
     
    pivot := rand.Int() % len(a)
     
    a[pivot], a[right] = a[right], a[pivot]
     
    for i, _ := range a {
        if a[i] < a[right] {
            a[left], a[i] = a[i], a[left]
            left++
        }
    }
     
    a[left], a[right] = a[right], a[left]
     
    quicksort(a[:left])
    quicksort(a[left+1:])
     
    return a
}
END